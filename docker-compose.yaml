services:
  postgres:
    image: postgres:17-alpine
    container_name: postgres-mnemonic
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - mnemonic-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin-mnemonic
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json    
    ports:
      - "5433:80"
    depends_on:
      - postgres
    networks:
      - mnemonic-network
    init: true
    # Automatically generate servers.json on container start. Auto connect to PostgreSQL.
    command: >
      sh -c "
        cat > /pgadmin4/servers.json << EOF
        {
          \"Servers\": {
            \"1\": {
              \"Name\": \"Mnemonic Database\",
              \"Group\": \"Servers\",
              \"Host\": \"postgres-mnemonic\",
              \"Port\": 5432,
              \"MaintenanceDB\": \"$${POSTGRES_DB}\",
              \"Username\": \"$${POSTGRES_USER}\",
              \"SSLMode\": \"prefer\"
            }
          }
        }
        EOF
        && exec /entrypoint.sh
      "

volumes:
  pgdata:

networks:
  mnemonic-network:
    driver: bridge